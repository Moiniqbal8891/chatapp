const pool = require("../database");
const bcrypt = require("bcrypt");
const Signup = async (req, res) => {
  try {
    // Check if the necessary fields are in the request body
    const { id, name, email, password } = req.body;
    if (!id || !name || !email || !password) {
      return res.status(400).json({ message: "All fields are required" });
    }
    console.log("Received user data:", { id, name, email, password });
    const hashedPassword = await bcrypt.hash(password, 10);
    const signup_query =
      "INSERT INTO users (id, name, email, password) VALUES ($1, $2, $3, $4)";
    const response = await pool.query(signup_query, [
      id,
      name,
      email,
      hashedPassword,
    ]);

    res
      .status(200)
      .json({ success: true, message: "New role Registered successfully" });
  } catch (error) {
    console.error(error);
  }
};

const Login = async (req, res) => {
  const { email, password } = req.body;
  try {
    const query = "SELECT * FROM users WHERE email = $1";
    const user = await pool.query(query, [email]);

    if (user.rowCount === 0) {
      return res.status(200).json({
        success: false,
        message: "No user found!",
      });
    }
    const validPassword = await bcrypt.compare(password, user.rows[0].password);

    if (!validPassword) {
      return res
        .status(401)
        .json({ success: false, message: "Invalid password" });
    }

    return res.status(200).json({
      success: true,
      user: user.rows[0],
    });
  } catch (error) {
    console.error("Login error:", error);
    return res.status(500).json({
      success: false,
      message: "Something went wrong. Please try again later.",
      error: error.message, // you can remove this in production
    });
  }

  //   if (user.rows?.length === 0) {
  //     return res
  //       .status(404)
  //       .json({ success: false, message: "Account not found" });
  //   }

  //   const validPassword = await bcrypt.compare(password, user.rows[0].password);

  // //   if (!validPassword) {
  // //     return res
  // //       .status(401)
  // //       .json({ success: false, message: "Invalid password" });
  // //   }

  // res.status(200).json({
  //   success: true,
  //   message: "Login successful, Redirecting",
  // });
  // // } catch (error) {
  // //   console.error(error);
  // //   res.status(500).json({ success: false, message: "Internal Server Error" });
  // // }
};

module.exports = { Signup, Login };
